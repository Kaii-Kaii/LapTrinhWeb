


@model IEnumerable<QL_NhaHang_ADO.Models.MonAn>

@{
    ViewBag.Title = "DanhSachMonAn";
    Layout = "~/Views/Share/layuot_admin.cshtml";
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<form method="post" action="@Url.Action("XuLyForm", "Admin_MonAn")" autocomplete="off">
    <!--tạo một bảng 3 cột 2 cột đầu 5 dòng cột 3 1 dòng-->
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <br>
                <div class="row">
                    <h3>Mã món ăn:</h3>
                </div>
                <div class="row">
                    <h3>Tên món ăn:</h3>
                </div>
                <div class="row">
                    <h3>Giá:</h3>
                </div>
                <div class="row">
                    <h3>Loại món ăn:</h3>
                </div>
                <div class="row">
                    <h3>Ảnh:</h3>
                </div>
            </div>
            <div class="col-md-4 input_mon">
                <br>
                <div class="row">
                    <input type="text" name="MaMonAn" id="MaMonAn" />
                </div>
                <div class="row">
                    <input type="text" name="TenMon" id="TenMon" />
                </div>
                <div class="row">
                    <input type="text" name="Gia" id="Gia" />
                </div>
                <div class="row">
                    <input type="text" name="LoaiMon" id="LoaiMon" />
                </div>
                <div class="row">
                    <input type="file" name="AnhMon" id="AnhMon" accept="Images/MonAn/*" />
                    <input type="hidden" name="TenAnh" id="TenAnh" />
                    <img id="imgPreview" src="" alt="Ảnh món ăn" style="width: 100px; height: auto; display: block; margin-top: 10px;" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="row">
                    <h3 style="margin: auto;">Mô tả món ăn</h3>
                </div>
                <div class="row">
                    <textarea name="MoTa" id="MoTa" cols="30" rows="9" style="width: 100%;"></textarea>
                </div>
                <div class="row" style="margin: 2px; align-items: center;">
                    <button type="submit" name="action" value="Them">Thêm Món Ăn</button>
                    <button type="submit" name="action" value="Xoa">Xóa Món Ăn</button>
                    <button type="submit" name="action" value="Sua">Sửa Món Ăn</button>
                </div>
            </div>
        </div>
    </div>
    <style>
        .input_mon input {
            width: 90%;
            padding: 5px;
            margin-top: 5px;
        }
    </style>
</form>
<script>
    // lấy tên ảnh từ thẻ imgPreview
    var img = document.getElementById('imgPreview');
    var tenAnh = document.getElementById('TenAnh');
    img.addEventListener('change', function () {
        tenAnh.value = img.src;
    });

</script>
<style>
    #them_mon_an {
        width: 100%;
        border-collapse: collapse;
    }

    #imgPreview {
        border: 1px solid #ddd;
        padding: 2px;
        border-radius: 5px;
        max-width: 100px; /* Đảm bảo ảnh không quá to */
        max-height: 100px;
        object-fit: cover; /* Đảm bảo ảnh hiển thị đúng tỉ lệ */
    }


    #them_mon_an th {
        border: 1px solid black;
        padding: 5px;
        text-align: left;
    }

    #them_mon_an input {
        width: 100%;
        padding: 2px;
    }

    #them_mon_an button {
        padding: 5px;
        background-color: #4CAF50;
        color: white;
        border: none;
        cursor: pointer;
    }

        #them_mon_an button:hover {
            background-color: #45a049;
        }
</style>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.MaMonAn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TenMon)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoaiMon)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gia)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AnhMon)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.MaMonAn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TenMon)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoaiMon)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gia)
            </td>
            <td>
                <img src="~/Images/MonAn/@item.AnhMon" alt="Ảnh món ăn" style="width: 100px; height: auto;" />
            </td>
            <td>
                <a href="#" class="edit-link" data-id="@item.MaMonAn"
                   data-tenmon="@item.TenMon"
                   data-loaimon="@item.LoaiMon"
                   data-gia="@item.Gia"
                   data-anhmon="@item.AnhMon"
                   data-mota="@item.MoTa">
                    Edit
                </a> |
               
            </td>

        </tr>
    }
</table>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('form'); // Lấy form
        const editLinks = document.querySelectorAll('.edit-link');
        const anhMonInput = document.getElementById('AnhMon');
        const tenAnhInput = document.getElementById('TenAnh');
        const imgPreview = document.getElementById('imgPreview');

        // Hiển thị ảnh khi chọn file
        anhMonInput.addEventListener('change', function () {
            const file = this.files[0];
            const fileName = file?.name || '';
            tenAnhInput.value = fileName;

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imgPreview.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

        // Xử lý sự kiện nhấn nút Edit
        editLinks.forEach(link => {
            link.addEventListener('click', function (event) {
                event.preventDefault(); // Ngăn chặn chuyển hướng

                const maMonAn = this.dataset.id;
                const tenMon = this.dataset.tenmon;
                const loaiMon = this.dataset.loaimon;
                const gia = this.dataset.gia;
                const anhMon = this.dataset.anhmon;

                document.getElementById('MaMonAn').value = maMonAn;
                document.getElementById('TenMon').value = tenMon;
                document.getElementById('LoaiMon').value = loaiMon;
                document.getElementById('Gia').value = gia;
                tenAnhInput.value = anhMon;
                anhMonInput.value = ''; // Đảm bảo input file trống
                imgPreview.src = `/Images/MonAn/${anhMon}`;
            });
        });

        // Xử lý sự kiện submit form với xác nhận SweetAlert
        form.addEventListener('submit', function (event) {
            event.preventDefault(); // Ngăn chặn gửi form mặc định

            const action = event.submitter.value; // Lấy giá trị của nút bấm (Thêm, Xóa, Sửa)
            let message = '';

            // Xác định thông điệp tùy theo hành động
            switch (action) {
                case 'Them':
                    message = 'Bạn có chắc chắn muốn thêm món ăn này?';
                    break;
                case 'Xoa':
                    message = 'Bạn có chắc chắn muốn xóa món ăn này?';
                    break;
                case 'Sua':
                    message = 'Bạn có chắc chắn muốn sửa món ăn này?';
                    break;
                default:
                    break;
            }

            // Hiển thị SweetAlert xác nhận
            Swal.fire({
                title: 'Xác nhận',
                text: message,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Đồng ý',
                cancelButtonText: 'Hủy bỏ'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Đặt giá trị cho action để form có thể gửi đúng action
                    const actionInput = document.createElement('input');
                    actionInput.type = 'hidden';
                    actionInput.name = 'action';
                    actionInput.value = action;
                    form.appendChild(actionInput);

                    form.submit(); // Gửi form nếu người dùng xác nhận
                }
            });
        });
    });


</script>



